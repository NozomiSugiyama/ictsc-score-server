score-detail
	.panel.panel-default
		.panel-body
			.form-horizontal
				.form-group
					label.col-sm-2.control-label 問題番号
					.col-sm-10 { problem.id }
				.form-group
					label.col-sm-2.control-label 問題名
					.col-sm-10
						a.show.form-control-static(href='{ "/problems/" + problem.id }') { problem.title }
				.form-group
					label.col-sm-2.control-label 採点者
					.col-sm-10
						a.show.form-control-static(href='{ "/members/" + score.marker_id }') { marker.name }
				.form-group
					label.col-sm-2.control-label スコア
					.col-sm-10
						p.form-control-static { score.point }
				.form-group
					label.col-sm-2.control-label 解答番号
					.col-sm-10
						a.show.form-control-static(href='{ "/problems/" + problem.id + "#answer-comment-list" }') { score.id }
				.form-group
					label.col-sm-2.control-label 解答チーム
					.col-sm-10
						a.show.form-control-static(href='{ "/teams/" + team.id }') { team.name }
				.form-group
					label.col-sm-2.control-label 作成日時
					.col-sm-10
						p.form-control-static { date2str(score.created_at) }
				.form-group
					label.col-sm-2.control-label 更新日時
					.col-sm-10
						p.form-control-static { date2str(score.updated_at) }
	script.
		fetch(`/api/scores/${this.opts.sub_resource_id}`, {
			credentials: "same-origin"
		}).then((res) => {
			res.json().then((j) => {
				this.score = j;
				this.update();

				fetch(`/api/members/${this.score.marker_id}`, {
					credentials: "same-origin"
				}).then((res) => {
					res.json().then((j) => {
						this.marker = j
						this.update();
					})
				})

				fetch(`/api/answers/${this.score.answer_id}`, {
					credentials: "same-origin"
				}).then((res) => {
					res.json().then((j) => {
						answer = j

						fetch(`/api/teams/${answer.team_id}`, {
							credentials: "same-origin"
						}).then((res) => {
							res.json().then((j) => {
								this.team = j
								this.update();
							})
						})
					})
				})
			});
		});

		fetch(`/api/problems/${this.opts.resource_id}`, {
			credentials: "same-origin"
		}).then((res) => {
			res.json().then((j) => {
				this.problem = j
				this.update();
			})
		})
