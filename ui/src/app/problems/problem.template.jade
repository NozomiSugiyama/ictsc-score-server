div([ngClass]="{'l-column l-column_size_1of2': !isProblemOnly, 'l-column_size_expanded': viewExpand == -1}")
  button.p-button-toggle-width.p-button-toggle-width__left(*ngIf="!isProblemOnly", (click)="viewExpand = viewExpand+1")
    i.fa.fa-caret-left
  .p-pagination.u-cf
    a.p-pagination__prev(*ngIf="neiberProbrem(false)", [routerLink]="neiberLink(neiberProbrem(false))") {{ neiberProbrem(false).title }}
    a.p-pagination__next(*ngIf="neiberProbrem(true)", [routerLink]="neiberLink(neiberProbrem(true))") {{ neiberProbrem(true).title }}

  h1.p-page-title.p-page-title_type_bordered.p-page-title_size_large.p-page-title_with_button
    .c-problem-number 問題 {{ problemData?.id }}:
    .c-problem-name(*ngIf="problemData", [editable]="problemEdit", [(editableModel)]="problemData.title")
    .c-editorial-buttons(*ngIf="isAdmin && problemEdit", (click)="problemEdit = true")
      .c-button-wrapper
        button.p-button.p-button_color_gray.p-button_size_small(*ngIf="problemEdit", (click)="problemEditCancel()") 編集取消
      .c-button-wrapper
        button.p-button.p-button_color_green(*ngIf="problemEdit", (click)="problemEditPost()") 保存
    button.p-icon-button.p-icon-button_type_edit.fa.fa-pencil(type='button', aria-label='編集', *ngIf="isAdmin && !problemEdit", (click)="problemEdit = true")
    //- button.cancel(*ngIf="problemEdit", (click)="problemEditCancel()") 編集キャンセル
    //- button.cancel(*ngIf="problemEdit", (click)="problemEditPost()") 編集確定

  p.c-problem-info.center-block 公開 　{{ problemData?.opened_at | time }}　|　更新　{{ problemData?.updated_at | time }} |　締切　{{ problemData?.closed_at | time }}
  dir(*ngIf="problemEdit")
    .input-group
      span.input-group-addon 公開日時
      input.form-control(type="datetime-local", name="opened_at", [(ngModel)]="problemData.opened_at")
    br
    .input-group
      span.input-group-addon 締切日時
      input.form-control(type="datetime-local", name="opened_at", [(ngModel)]="problemData.closed_at")

  .c-problem-panel
    .p-item-heading 補足事項:
    p.c-problem-panel__supplement(*ngFor="let comment of problemComments")
      markdown([body]="comment.text")
      button.p-icon-button.p-icon-button_type_delete.fa.fa-times(type='button', (click)="problemCommentsDelete(comment.id)")
        span.p-icon-button__label 削除
      span.p-post-meta.pull-right {{ comment.updated_at | time }}
    .p-item-heading
      .c-button-supplement-addition
        button.p-icon-button.p-icon-button_shape_circle.c-opened((click)="problemCommentsAddEnable = !problemCommentsAddEnable")
          i.fa.fa-plus(aria-hidden='true')
        | 補足を追加
      div(*ngIf="problemCommentsAddEnable")
        textarea(simplemde, [(ngModel)]="problemCommentsAddText")
        button.p-button.p-button_color_green((click)="problemCommentsAdd()") 補足を追加
    .p-item-heading 問題:
    .u-cf
      div(*ngIf="problemEdit")
        textarea(simplemde, [(ngModel)]="problemData.text")
      markdown(*ngIf="!problemEdit", [body]="problemData?.text")
      span.p-post-meta.pull-right 投稿者
        a(href='/member-detail.html') admin
  div(*ngIf="true")
    pre.
      @Input() id: string; {{ id }}
      @Input() team: string; {{ team }}
      @Input() issue: string; {{ issue }}
      @Input() show: string; {{ show }}
      @Input() mode: string; {{ mode }}
      {{ issues | json }}
    pre.
      isSingleIssue: {{ isSingleIssue?"t":"f" }}
      isAnswer: {{ isAnswer?"t":"f" }}
      isIssue: {{ isIssue?"t":"f" }}
      problemData: {{ problemData | json }}
      problemComments: {{ problemComments | json }}
      answer: {{ answer | json }}
      teamData: {{ teamData | json }}
      score: {{ score | json }}
      viewExpand: {{ viewExpand }}
    pre.
      neiber-prev {{ neiberProbrem(false) | json }}
      neiber-next {{ neiberProbrem(true) | json }}

.l-column.l-column_size_1of2.l-column_type_bordered(*ngIf="!isProblemOnly", [ngClass]="{'l-column_size_expanded': viewExpand == 1}")
  button.p-button-toggle-width.p-button-toggle-width__right((click)="viewExpand = viewExpand-1")
    i.fa.fa-caret-right
  a.c-tab([routerLink]="['/answers', id, team]", [ngClass]="{'c-tab_state_active': isAnswer}", type='button') 解答
  a.c-tab([routerLink]="['/issues', id, team]", [ngClass]="{'c-tab_state_active': isIssue}", type='button') 質問
  .c-tab-panel-heading.pull-right(*ngIf="isAdmin && !ansewrIsNotFound && score")
    span.c-score
      | 得点
      span.c-score__figure(*ngIf="!scoreEdit") {{ score?.point }}
      input#input-score(type='number', [ngClass]="{hidden:!scoreEdit}", [(ngModel)]="score.point")
      | 点
    span([ngSwitch]="scoreEdit")
      button.p-button.p-button_color_yellow(*ngSwitchCase="false", (click)="scoreEdit = true") 編集
      button.p-button.p-button_color_green(*ngSwitchCase="true", (click)="scoreEditSubmit()") 採点
  .c-tab-panel(*ngIf="isAnswer")
    .c-tab-panel__content

      .c-message-panel.u-cf
        span.c-message-panel__name {{ teamData?.id }}. {{ teamData?.name }}
        | の解答
        div(*ngIf="ansewrIsNotFound") 解答が投稿されていません
        .c-message.c-message_of_general(*ngFor="let comment of answer?.comments")
          .c-message__body.message_type_answer
            markdown([body]="comment.text")
          .c-message__footer.u-cf
            .p-post-meta
              a([routerLink]="['/teams', comment.member_id]") {{ teamData?.name }}
              a([routerLink]="['/members', comment.member_id]") {{ getMember(comment.member_id)?.name }}
              | {{ comment.updated_at | time }}

      .u-cf(*ngIf="isParticipant")
        .alert.alert-warning(*ngIf="answerPostError")
          {{ answerPostError }}
        textarea#textarea-question-comment(simplemde, [(ngModel)]="postAnswerText", name='question-comment', placeholder='解答を記入してください')
        button.p-button.p-button_color_green.pull-right(type='button', (click)="postAnswer()") 送信

  .c-tab-panel(*ngIf="isIssue")
    div(*ngIf="!isSingleIssue")
      .c-question-post.u-cf(*ngIf="isParticipant")
        input#textarea-question-name(type='text', name='question-name', placeholder='タイトルは具体的かつ端的に記入してください', [(ngModel)]="postTitle")
        textarea#textarea-question-body(name='question-body', placeholder='質問内容を記入してください', [(ngModel)]="postText", simplemde)
        button.p-button.p-button_color_green.pull-right(type='button', (click)="postIssue()") 質問投稿

      .c-filter-list
        .c-filter-list__heading ラベルフィルター
        .c-filter-list__item
          button.p-state-label.p-state-label__all 全て
        .c-filter-list__item
          button.p-state-label.p-state-label__no-response 未回答
        .c-filter-list__item
          button.p-state-label.p-state-label__in-progress 対応中
        .c-filter-list__item
          button.p-state-label.p-state-label__resolved 解決済

    div(*ngFor="let item of issues; let i = index")
      problem-issue([issue]="issues[i]", [isadmin]="isAdmin", (issueChange)="ngOnChanges({issue: {}})")
