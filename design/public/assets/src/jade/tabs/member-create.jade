member-create
	form.form-horizontal(action='/members/list.html', name='form-member-creation')
		.form-group
			label.col-sm-2.control-label(for='select-team-name') チーム名
			.col-sm-10
				select.form-control#select-team-name(name='team-name' onchange='{ select_team }')
					option(value='0') チーム名を選択してください
					option(each='{ teams }' value='{ id }' selected='{ id == member.team_id }') { name }
		.form-group
			label.col-sm-2.control-label 所属
			.col-sm-10
				p.form-control-static { (selected_team && selected_team.organization) || "チーム名が未選択" }
					span.help-block(hide='{ selected_team }') チーム名を選択すると自動表示されます
		.form-group
			label.col-sm-2.control-label(for='input-username') ユーザー名
			.col-sm-10
				input.form-control#input-username(type='text')
		.form-group
			label.col-sm-2.control-label(for='input-member-id') メンバー ID
			.col-sm-10
				input.form-control#input-member-id(type='text')
				span.help-block 半角英数字、ハイフン ("-")、アンダースコア ("_")、ピリオド (".")、xx 〜 xx 文字
		.form-group
			label.col-sm-2.control-label(for='input-password') パスワード
			.col-sm-10
				input.form-control#input-password(name='password', type='password')
		.text-right
			button.btn.btn-primary(type='submit') 作成
	script.
			this.selected_team = null

			fetch("/api/teams").then((res) => {
				res.json().then((j) => {
					this.teams = j;
					console.log(j[0]);
					//- this.team = j[0].name
					this.update();
				})
			})

			select_team(e) {
				const idx = e.target.selectedIndex;
				if (idx == 0) {
					this.selected_team = null
				} else {
					this.selected_team = this.teams[idx-1]
				}
			}
